type Cliente {
  id: ID
  nombre: String
  apellido: String
  empresa: String
  emails: [Email]
  edad: Int
  tipo: TipoCliente
}

type Email {
  email: String
}

type Producto{
  id: ID
  nombre: String!
  precio: Float!
  stock: Int!
}

type Pedido{
  id: ID
  pedido: [PedidoProducto]
  total: Float
  fecha: String
  cliente: ID
  estado: EstadoPedido
}

type PedidoProducto{
  id: ID
  cantidad: Int
}

type ClienteTotal{
  total: Float
  cliente: [Cliente]
}

"""
Asigna la categoria del cliente
"""
enum TipoCliente {
  BASICO
  PREMIUM
}

enum EstadoPedido{
  PENDIENTE
  COMPLETADO
  CANCELADO
}

input PedidoInput {
  producto: String
  precio: Int
}

input EmailInput {
  email: String
}

"""
Campos para los clientes nuevos
"""
input ClienteInput {
  id: ID
  nombre: String!
  apellido: String!
  empresa: String!
  emails: [EmailInput]
  edad: Int!
  tipo: TipoCliente!
  pedidos: [PedidoInput]
}

input ProductoInput{
  id: ID
  nombre: String!
  precio: Float!
  stock: Int!
}

input PedidoInput{
  id: ID
  pedido: [PedidoProductoInput]
  total: Float
  fecha: String
  cliente: ID
  estado: EstadoPedido
}

input PedidoProductoInput{
  id: ID
  cantidad: Int
}

""" Consultas de clientes a la base de datos """
type Query {
  """ Permite obtener todos lo registro o un registro especifico """
  getClientes(limite: Int, offset: Int) : [Cliente]
  """ Buscar un cliente en base a un ID """
  getCliente(id: ID): Cliente
  """" Count the record of request"""
  totalClientes: String
  #Productos
  obtenerProductos(limite: Int, offset: Int, stock: Boolean) : [Producto]
  obtenerProducto(id: ID!) : Producto
  totalProductos: String
  #Obtener pedidos
  obtenerPedidos(cliente: String) : [Pedido]
  #Gr√°ficas
  topClientes: [ClienteTotal]
}


"""
 Mutations para crear nuevos clientes
"""
type Mutation {
  #Nombre del Resolver, Input con Datos y valor que retorna
  """
   Te permite crear nuevos clientes
  """
  crearCliente(input: ClienteInput): Cliente
  """ Te permite actualizar los datos de los clientes """
  actualizarCliente(input: ClienteInput) : Cliente
  """ Te permite borrar los registros de los clientes """
  eliminarCliente(id: ID! ) : String
  #Productos
  nuevoProducto(input: ProductoInput) : Producto
  actualizarProducto(input: ProductoInput): Producto
  eliminarProducto(id: ID!) : String
  #Pedidos
  nuevoPedido(input: PedidoInput): Pedido
  actualizarEstado(input: PedidoInput): String
}
